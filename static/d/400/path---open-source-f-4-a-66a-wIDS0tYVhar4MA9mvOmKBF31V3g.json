{"data":{"markdownRemark":{"html":"<p>Hey <span class=\"main__body__content__span\">hackers!</span> <a href=\"mailto:me@l0rdcafe.com\">l0rdcaf√©</a> here. This post is about <strong>version control</strong>, how I learned <strong>git</strong> and in turn my first open source contribution. Up until then, my technical proficiency with <strong>version control</strong> was limited. I had a basic workflow to initialize a <strong>repository</strong>, add files, <strong>commit changes</strong> and <strong>push repositories</strong> to a remote server, in my case <a href=\"http://github.com\">GitHub</a> but that was about it.</p>\n<p>My <strong>git workflow</strong> was a product of the aforementioned <a href=\"https://www.learnenough.com/git-tutorial\">Learn Enough tutorial on version control</a>, <a href=\"https://guides.github.com/\">GitHub's Guides</a> and trial and error within reasonable limits. Until one day after updating my <strong>tech stack</strong>, <a href=\"#newdev\">(more on that to come later!)</a> and getting <a href=\"http://browsersync.io/\">browser-sync</a>, which starts a <strong>local</strong> web server that updates browser on file changes. I noticed the <a href=\"https://github.com/tldr-pages/tldr\">tldr</a> pages were missing a page for <a href=\"http://browsersync.io\">browser-sync</a> after needing to look up some syntax examples.</p>\n<p>Seeing an opportunity to contribute, I went to the <a href=\"https://github.com/tldr-pages/tldr\">GitHub tldr repo</a>, <strong>forked</strong> a copy from its <strong>master branch</strong>, and created my one-page contribution to the <a href=\"https://github.com/tldr-pages/tldr\">tldr</a>. Again, <a href=\"https://github.com/jellyc0la\">jellyc0la's</a> guidance was invaluable to my success, helping me ensure adherence to the standardized format of the <strong>tldr pages</strong>. Inevitably and due to my inexperience with <strong>git</strong> as well as the <strong>CI server</strong>, I committed one too many changes.</p>\n<p>Fearful it might reflect a lack of professionalism, I learned about <strong>git rebase</strong> with the help of <a href=\"https://github.com/jellyc0la\">jellyc0la</a>, which enables you to alter the history of <strong>commits</strong> in a variety of ways. And after mostly trial and error, tweaking the <strong>git log</strong>, I <strong>pushed</strong> my changes for submission. My contribution finally passed the <strong>CI</strong> and was to be reviewed by the maintainer. Within a day or two, the first maintainer approved the changes, and notified the second maintainer to review my <strong>pull request</strong>. A month later, it was finally approved and my contribution was <strong>merged</strong> to the <strong>master branch</strong> of the <a href=\"https://github.com/tldr-pages/tldr/blob/master/pages/common/browser-sync.md\">tldr pages.</a></p>\n<p>In conclusion, even though I was inexperienced with <strong>version control</strong>; my workflow, technical sophistication and knowledge lacking, my first open source contribution helped me learn more <strong>git</strong> and gain valuable experience under my belt with <strong>pull requests</strong>, <strong>forks</strong>, <strong>git rebase</strong> even more than tutorials ever did. And this goes to show that nothing beats immersion when it comes to learning.</p>","frontmatter":{"path":"/open-source","title":"My First Open Source Contribution","date":"2017-04-27T11:00:00.000Z","description":"l0rdcafe's experience with open source contribution to the tldr manual pages, adding a page for the browser-sync CLI. Blog post features references to M. Hartl's Learn Enough series and discusses git version control and advanced topics such as git rebase, bypassing a CI server, cleaning up git history, and how to submit a pull request to an open source project on github.","og_description":"Post about an open source contribution to the tldr manual pages, adding a browser-sync CLI manual page using some git history manipulation and a pull request on github.","twitter_description":"Post about an open source contribution to the tldr manual pages, adding a browser-sync CLI manual page using some git history manipulation and a pull request on github."}}},"pageContext":{}}