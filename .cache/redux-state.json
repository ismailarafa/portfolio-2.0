{
  "nodes": {
    "SitePage /dev-404-page/": {
      "path": "/dev-404-page/",
      "id": "SitePage /dev-404-page/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f91d29e10ba680b413138cf9ed86e655",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin dev-404-page": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "id": "Plugin dev-404-page",
      "name": "dev-404-page",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "packageJson": {
        "name": "dev-404-page",
        "description": "Internal plugin to add a 404 page in development with helpful information",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "791f43ec9c347be5e18c8f71b6f72b32",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin load-babel-config": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby/dist/internal-plugins/load-babel-config",
      "id": "Plugin load-babel-config",
      "name": "load-babel-config",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onPreBootstrap"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby/dist/internal-plugins/load-babel-config",
      "packageJson": {
        "name": "load-babel-config",
        "description": "Internal plugin that handles loading Babel configs",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "7d89a919974b26a52162a62cd1d65e07",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin internal-data-bridge": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "id": "Plugin internal-data-bridge",
      "name": "internal-data-bridge",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "sourceNodes",
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "packageJson": {
        "name": "internal-data-bridge",
        "description": "An internal Gatsby plugin which creates data nodes from internal data",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "72786755980b162060a1e02d9452b54c",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin prod-404": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby/dist/internal-plugins/prod-404",
      "id": "Plugin prod-404",
      "name": "prod-404",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby/dist/internal-plugins/prod-404",
      "packageJson": {
        "name": "prod-404",
        "description": "Internal plugin to detect various flavors of 404 pages and ensure there's a 404.html path created as well to ensure compatability with static hosts",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "f31643fbf26e229f2b582619262139bd",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin query-runner": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby/dist/internal-plugins/query-runner",
      "id": "Plugin query-runner",
      "name": "query-runner",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby/dist/internal-plugins/query-runner",
      "packageJson": {
        "name": "query-runner",
        "description": "Internal plugin for running queries",
        "version": "1.0.0",
        "main": "index.js",
        "author": "",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "d6a32f420915ff91a1da9d5c215db718",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-react-helmet": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-react-helmet",
      "id": "Plugin gatsby-plugin-react-helmet",
      "name": "gatsby-plugin-react-helmet",
      "version": "3.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-react-helmet",
      "packageJson": {
        "name": "gatsby-plugin-react-helmet",
        "description": "Manage document head data with react-helmet. Provides drop-in server rendering support for Gatsby.",
        "version": "3.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "favicon",
          "react-helmet",
          "seo",
          "document",
          "head",
          "title",
          "meta",
          "link",
          "script",
          "base",
          "noscript",
          "style"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "matthews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          },
          {
            "name": "react-helmet",
            "version": ">=5.1.3"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "442520a0033ff96332710342951dd7cc",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-styled-components": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-styled-components",
      "id": "Plugin gatsby-plugin-styled-components",
      "name": "gatsby-plugin-styled-components",
      "version": "3.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateBabelConfig"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "wrapRootElement",
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-styled-components",
      "packageJson": {
        "name": "gatsby-plugin-styled-components",
        "description": "Gatsby plugin to add support for styled components",
        "version": "3.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "styled-components"
        ],
        "author": {
          "name": "Guten Ye",
          "email": "ywzhaifei@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          }
        ],
        "peerDependencies": [
          {
            "name": "babel-plugin-styled-components",
            "version": ">1.5.0"
          },
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          },
          {
            "name": "styled-components",
            "version": ">= 2.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "2ce632e12186f95b05db1311e4af19ee",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-sitemap": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-sitemap",
      "id": "Plugin gatsby-plugin-sitemap",
      "name": "gatsby-plugin-sitemap",
      "version": "2.0.1",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onPostBuild"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-sitemap",
      "packageJson": {
        "name": "gatsby-plugin-sitemap",
        "description": "Gatsby plugin that automatically creates a sitemap for your site",
        "version": "2.0.1",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Nicholas Young &lt;nicholas@nicholaswyoung.com&gt;"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "sitemap",
            "version": "^1.12.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "df1ca329cce45e824f65d4591c60834f",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-manifest": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-manifest",
      "id": "Plugin gatsby-plugin-manifest",
      "name": "gatsby-plugin-manifest",
      "version": "2.0.2",
      "pluginOptions": {
        "plugins": [],
        "name": "gatsby-starter-default",
        "short_name": "starter",
        "start_url": "/",
        "theme_color": "#3d9970",
        "display": "minimal-ui"
      },
      "nodeAPIs": [
        "onPostBootstrap"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-manifest",
      "packageJson": {
        "name": "gatsby-plugin-manifest",
        "description": "Gatsby plugin which adds a manifest.webmanifest to make sites progressive web apps",
        "version": "2.0.2",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "favicon",
          "icons",
          "manifest.webmanifest",
          "progressive-web-app",
          "pwa"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "sharp",
            "version": "^0.20.2"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "80d5a0ad5052d5786ae29611bbc2cae1",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-source-filesystem": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-source-filesystem",
      "id": "Plugin gatsby-source-filesystem",
      "name": "gatsby-source-filesystem",
      "version": "2.0.1",
      "pluginOptions": {
        "plugins": [],
        "name": "posts",
        "path": "/Users/Lord/repos/portfolio-2.0/source/_posts"
      },
      "nodeAPIs": [
        "sourceNodes",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-source-filesystem",
      "packageJson": {
        "name": "gatsby-source-filesystem",
        "description": "Gatsby plugin which parses files within a directory for further parsing by other plugins",
        "version": "2.0.1",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "better-queue",
            "version": "^3.8.7"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^1.7.0"
          },
          {
            "name": "fs-extra",
            "version": "^5.0.0"
          },
          {
            "name": "got",
            "version": "^7.1.0"
          },
          {
            "name": "md5-file",
            "version": "^3.1.1"
          },
          {
            "name": "mime",
            "version": "^2.2.0"
          },
          {
            "name": "pretty-bytes",
            "version": "^4.0.2"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          },
          {
            "name": "valid-url",
            "version": "^1.0.9"
          },
          {
            "name": "xstate",
            "version": "^3.1.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "fefaee11a54dbdb9fbfb6c9397651570",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-transformer-remark": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-transformer-remark",
      "id": "Plugin gatsby-transformer-remark",
      "name": "gatsby-transformer-remark",
      "version": "2.1.3",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateNode",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-transformer-remark",
      "packageJson": {
        "name": "gatsby-transformer-remark",
        "description": "Gatsby transformer plugin for Markdown using the Remark library and ecosystem",
        "version": "2.1.3",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "markdown",
          "remark"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "gray-matter",
            "version": "^4.0.0"
          },
          {
            "name": "hast-util-raw",
            "version": "^2.0.2"
          },
          {
            "name": "hast-util-to-html",
            "version": "^3.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "mdast-util-to-hast",
            "version": "^3.0.0"
          },
          {
            "name": "mdast-util-toc",
            "version": "^2.0.1"
          },
          {
            "name": "remark",
            "version": "^9.0.0"
          },
          {
            "name": "remark-parse",
            "version": "^5.0.0"
          },
          {
            "name": "remark-retext",
            "version": "^3.1.0"
          },
          {
            "name": "remark-stringify",
            "version": "^5.0.0"
          },
          {
            "name": "retext-english",
            "version": "^3.0.0"
          },
          {
            "name": "sanitize-html",
            "version": "^1.18.2"
          },
          {
            "name": "underscore.string",
            "version": "^3.3.4"
          },
          {
            "name": "unified",
            "version": "^6.1.5"
          },
          {
            "name": "unist-util-remove-position",
            "version": "^1.1.2"
          },
          {
            "name": "unist-util-select",
            "version": "^1.5.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.3.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "dc60322b3181cdbb8ca0c61c51b744a2",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-offline": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-offline",
      "id": "Plugin gatsby-plugin-offline",
      "name": "gatsby-plugin-offline",
      "version": "2.0.5",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPages",
        "onPostBuild"
      ],
      "browserAPIs": [
        "registerServiceWorker",
        "onPrefetchPathname",
        "onServiceWorkerActive"
      ],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-offline",
      "packageJson": {
        "name": "gatsby-plugin-offline",
        "description": "Gatsby plugin which sets up a site to be able to run offline",
        "version": "2.0.5",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "offline",
          "precache",
          "service-worker"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "cheerio",
            "version": "^1.0.0-rc.2"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "workbox-build",
            "version": "^3.4.1"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-beta"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "274bb9d704f31dca2dccc2b9b8a949eb",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin default-site-plugin": {
      "resolve": "/Users/Lord/repos/portfolio-2.0",
      "id": "Plugin default-site-plugin",
      "name": "default-site-plugin",
      "version": "cbc5f775c9ac16b4c63323743b97be95",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPages"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0",
      "packageJson": {
        "name": "gatsby-starter-default",
        "description": "Gatsby default starter",
        "version": "1.0.0",
        "keywords": [
          "gatsby"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "gatsby",
            "version": "^2.0.0"
          },
          {
            "name": "gatsby-plugin-manifest",
            "version": "^2.0.2"
          },
          {
            "name": "gatsby-plugin-offline",
            "version": "^2.0.5"
          },
          {
            "name": "gatsby-plugin-react-helmet",
            "version": "^3.0.0"
          },
          {
            "name": "gatsby-plugin-sitemap",
            "version": "^2.0.1"
          },
          {
            "name": "gatsby-plugin-styled-components",
            "version": "^3.0.0"
          },
          {
            "name": "gatsby-source-filesystem",
            "version": "^2.0.1"
          },
          {
            "name": "gatsby-transformer-remark",
            "version": "^2.1.3"
          },
          {
            "name": "prop-types",
            "version": "^15.6.2"
          },
          {
            "name": "react",
            "version": "^16.5.1"
          },
          {
            "name": "react-dom",
            "version": "^16.5.1"
          },
          {
            "name": "react-helmet",
            "version": "^5.2.0"
          },
          {
            "name": "styled-components",
            "version": "^3.4.9"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-plugin-styled-components",
            "version": "^1.7.1"
          },
          {
            "name": "gh-pages",
            "version": "^2.0.0"
          },
          {
            "name": "prettier",
            "version": "^1.14.2"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "8464a511f8a99a1be3348d11ea5af482",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-page-creator": {
      "resolve": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-page-creator",
      "id": "Plugin gatsby-plugin-page-creator",
      "name": "gatsby-plugin-page-creator",
      "version": "2.0.0",
      "pluginOptions": {
        "plugins": [],
        "path": "/Users/Lord/repos/portfolio-2.0/src/pages",
        "pathCheck": false
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-page-creator",
      "packageJson": {
        "name": "gatsby-plugin-page-creator",
        "description": "Gatsby plugin that automatically creates pages from React components in specified directories",
        "version": "2.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^1.7.0"
          },
          {
            "name": "fs-exists-cached",
            "version": "^1.0.0"
          },
          {
            "name": "glob",
            "version": "^7.1.1"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "parse-filepath",
            "version": "^1.0.1"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "5f7a1d6a3a50722efdf37312bf83dc44",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Site": {
      "siteMetadata": {
        "title": "l0rdcafé 👑 Personal Homepage of Ismail Arafa, Freelance Front End Web Developer and Musician based in Toronto, Canada 🍁",
        "siteUrl": "http://www.l0rdcafe.com"
      },
      "pathPrefix": "",
      "polyfill": true,
      "buildTime": "2018-09-27T12:15:36.888Z",
      "id": "Site",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "45338ff7a151a27fab7eb27863333c7f",
        "type": "Site",
        "owner": "internal-data-bridge"
      }
    },
    "c02eda9f-5964-57aa-87e8-719d1b25c70c": {
      "id": "c02eda9f-5964-57aa-87e8-719d1b25c70c",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d25378092f2918238832604bc58831cd",
        "type": "Directory",
        "description": "Directory \"source/_posts\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "posts",
      "absolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts",
      "relativePath": "",
      "extension": "",
      "size": 288,
      "prettySize": "288 B",
      "modifiedTime": "2018-09-26T11:41:33.465Z",
      "accessTime": "2018-09-27T12:15:46.094Z",
      "changeTime": "2018-09-26T11:41:33.465Z",
      "birthTime": "2018-03-05T11:06:10.009Z",
      "root": "/",
      "dir": "/Users/Lord/repos/portfolio-2.0/source",
      "base": "_posts",
      "ext": "",
      "name": "_posts",
      "relativeDirectory": "..",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 9,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8597193474,
      "blocks": 0,
      "atimeMs": 1538050546094.1975,
      "mtimeMs": 1537962093464.751,
      "ctimeMs": 1537962093464.751,
      "birthtimeMs": 1520247970009.0642,
      "atime": "2018-09-27T12:15:46.094Z",
      "mtime": "2018-09-26T11:41:33.465Z",
      "ctime": "2018-09-26T11:41:33.465Z",
      "birthtime": "2018-03-05T11:06:10.009Z"
    },
    "cf11e789-be4a-51ab-bbe1-d27dc8f98705": {
      "id": "cf11e789-be4a-51ab-bbe1-d27dc8f98705",
      "children": [
        "46230de7-a842-5ec8-bcb7-3aa3d1e10f14"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fa8c4c9283569dbe4d5f7e03eef8ca19",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"source/_posts/intro.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "posts",
      "absolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/intro.md",
      "relativePath": "intro.md",
      "extension": "md",
      "size": 3862,
      "prettySize": "3.86 kB",
      "modifiedTime": "2018-09-25T22:07:17.699Z",
      "accessTime": "2018-09-27T11:55:33.868Z",
      "changeTime": "2018-09-25T22:07:17.699Z",
      "birthTime": "2018-03-05T11:06:10.009Z",
      "root": "/",
      "dir": "/Users/Lord/repos/portfolio-2.0/source/_posts",
      "base": "intro.md",
      "ext": ".md",
      "name": "intro",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8597193475,
      "blocks": 8,
      "atimeMs": 1538049333867.7083,
      "mtimeMs": 1537913237698.7046,
      "ctimeMs": 1537913237698.7046,
      "birthtimeMs": 1520247970009.1655,
      "atime": "2018-09-27T11:55:33.868Z",
      "mtime": "2018-09-25T22:07:17.699Z",
      "ctime": "2018-09-25T22:07:17.699Z",
      "birthtime": "2018-03-05T11:06:10.009Z"
    },
    "8f323c00-9fc2-59e3-bafd-e31f0b5822df": {
      "id": "8f323c00-9fc2-59e3-bafd-e31f0b5822df",
      "children": [
        "25005c4d-21ea-5422-8158-72b7afb452b4"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "67091b31c1d2415637aa00b04a714490",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"source/_posts/open-source.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "posts",
      "absolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/open-source.md",
      "relativePath": "open-source.md",
      "extension": "md",
      "size": 3632,
      "prettySize": "3.63 kB",
      "modifiedTime": "2018-09-25T22:08:11.103Z",
      "accessTime": "2018-09-27T11:55:33.868Z",
      "changeTime": "2018-09-25T22:08:11.103Z",
      "birthTime": "2018-03-05T11:06:10.031Z",
      "root": "/",
      "dir": "/Users/Lord/repos/portfolio-2.0/source/_posts",
      "base": "open-source.md",
      "ext": ".md",
      "name": "open-source",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8597193488,
      "blocks": 8,
      "atimeMs": 1538049333867.7212,
      "mtimeMs": 1537913291102.5554,
      "ctimeMs": 1537913291102.5554,
      "birthtimeMs": 1520247970031.3777,
      "atime": "2018-09-27T11:55:33.868Z",
      "mtime": "2018-09-25T22:08:11.103Z",
      "ctime": "2018-09-25T22:08:11.103Z",
      "birthtime": "2018-03-05T11:06:10.031Z"
    },
    "239dde18-9da4-507e-9962-46e68c638cd6": {
      "id": "239dde18-9da4-507e-9962-46e68c638cd6",
      "children": [
        "938e7fc3-676d-5447-ac98-4d68a093969f"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f22c97a4763541f8daee12d533849e57",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"source/_posts/mac-setup.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "posts",
      "absolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/mac-setup.md",
      "relativePath": "mac-setup.md",
      "extension": "md",
      "size": 7638,
      "prettySize": "7.64 kB",
      "modifiedTime": "2018-09-26T11:57:50.493Z",
      "accessTime": "2018-09-27T11:55:33.868Z",
      "changeTime": "2018-09-26T11:57:50.493Z",
      "birthTime": "2018-03-05T11:06:10.010Z",
      "root": "/",
      "dir": "/Users/Lord/repos/portfolio-2.0/source/_posts",
      "base": "mac-setup.md",
      "ext": ".md",
      "name": "mac-setup",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8597193476,
      "blocks": 16,
      "atimeMs": 1538049333867.7146,
      "mtimeMs": 1537963070493.2515,
      "ctimeMs": 1537963070493.2515,
      "birthtimeMs": 1520247970009.6685,
      "atime": "2018-09-27T11:55:33.868Z",
      "mtime": "2018-09-26T11:57:50.493Z",
      "ctime": "2018-09-26T11:57:50.493Z",
      "birthtime": "2018-03-05T11:06:10.010Z"
    },
    "02089f74-26fd-53c8-97dd-9d83294e195d": {
      "id": "02089f74-26fd-53c8-97dd-9d83294e195d",
      "children": [
        "622f13af-ae1c-5044-a83b-7989e5deb116"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4b476621462e03b9104a01b49f76f7bd",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"source/_posts/programming-js.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "posts",
      "absolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/programming-js.md",
      "relativePath": "programming-js.md",
      "extension": "md",
      "size": 3932,
      "prettySize": "3.93 kB",
      "modifiedTime": "2018-09-25T22:08:35.165Z",
      "accessTime": "2018-09-27T11:55:33.868Z",
      "changeTime": "2018-09-25T22:08:35.165Z",
      "birthTime": "2018-03-05T11:06:10.033Z",
      "root": "/",
      "dir": "/Users/Lord/repos/portfolio-2.0/source/_posts",
      "base": "programming-js.md",
      "ext": ".md",
      "name": "programming-js",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8597193490,
      "blocks": 8,
      "atimeMs": 1538049333867.734,
      "mtimeMs": 1537913315165.0203,
      "ctimeMs": 1537913315165.0203,
      "birthtimeMs": 1520247970033.3945,
      "atime": "2018-09-27T11:55:33.868Z",
      "mtime": "2018-09-25T22:08:35.165Z",
      "ctime": "2018-09-25T22:08:35.165Z",
      "birthtime": "2018-03-05T11:06:10.033Z"
    },
    "1c1f49aa-3d38-55fb-a53a-17a8b4ebf865": {
      "id": "1c1f49aa-3d38-55fb-a53a-17a8b4ebf865",
      "children": [
        "501b216a-c1e7-5afb-901d-630a2a183b46"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "057d4072fca09e95bd8bd97a833184b9",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"source/_posts/sketch-graphic-design.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "posts",
      "absolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/sketch-graphic-design.md",
      "relativePath": "sketch-graphic-design.md",
      "extension": "md",
      "size": 5296,
      "prettySize": "5.3 kB",
      "modifiedTime": "2018-09-25T22:08:48.127Z",
      "accessTime": "2018-09-27T11:55:33.868Z",
      "changeTime": "2018-09-25T22:08:48.127Z",
      "birthTime": "2018-03-05T11:06:10.032Z",
      "root": "/",
      "dir": "/Users/Lord/repos/portfolio-2.0/source/_posts",
      "base": "sketch-graphic-design.md",
      "ext": ".md",
      "name": "sketch-graphic-design",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8597193489,
      "blocks": 16,
      "atimeMs": 1538049333867.7402,
      "mtimeMs": 1537913328126.6013,
      "ctimeMs": 1537913328126.6013,
      "birthtimeMs": 1520247970032.1494,
      "atime": "2018-09-27T11:55:33.868Z",
      "mtime": "2018-09-25T22:08:48.127Z",
      "ctime": "2018-09-25T22:08:48.127Z",
      "birthtime": "2018-03-05T11:06:10.032Z"
    },
    "58c54703-2991-56ed-be5f-52e31758fb46": {
      "id": "58c54703-2991-56ed-be5f-52e31758fb46",
      "children": [
        "20c8a6ae-5877-52fc-9d36-f2a91d8fe52e"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "19b31ca71e7fa0a38fb5cfa1cd11fbb2",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"source/_posts/perf-deploys.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "posts",
      "absolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/perf-deploys.md",
      "relativePath": "perf-deploys.md",
      "extension": "md",
      "size": 7422,
      "prettySize": "7.42 kB",
      "modifiedTime": "2018-09-26T11:43:10.916Z",
      "accessTime": "2018-09-27T11:55:33.868Z",
      "changeTime": "2018-09-26T11:43:10.916Z",
      "birthTime": "2018-07-05T16:00:31.129Z",
      "root": "/",
      "dir": "/Users/Lord/repos/portfolio-2.0/source/_posts",
      "base": "perf-deploys.md",
      "ext": ".md",
      "name": "perf-deploys",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8604458398,
      "blocks": 16,
      "atimeMs": 1538049333867.7275,
      "mtimeMs": 1537962190916.1191,
      "ctimeMs": 1537962190916.1191,
      "birthtimeMs": 1530806431129.2668,
      "atime": "2018-09-27T11:55:33.868Z",
      "mtime": "2018-09-26T11:43:10.916Z",
      "ctime": "2018-09-26T11:43:10.916Z",
      "birthtime": "2018-07-05T16:00:31.129Z"
    },
    "46230de7-a842-5ec8-bcb7-3aa3d1e10f14": {
      "id": "46230de7-a842-5ec8-bcb7-3aa3d1e10f14",
      "children": [],
      "parent": "cf11e789-be4a-51ab-bbe1-d27dc8f98705",
      "internal": {
        "content": "\nHello, world. At the turn of the year, my hacker buddy [jellyc0la](https://github.com/jellyc0la) linked me a series of introductory tutorials titled [Learn Enough](http://learnenough.com/), and ever since I've been on a deep dive into the expanding universe of web development. He mentored me through a well-crafted curriculum, starting with front-end web development, and relentlessly emphasizing learning the fundamentals of concepts deeply.\n\nAfter covering some basic **UNIX command line**, basic version control and **HTML**, next up was [The Odin Project's HTML5/CSS3](https://www.theodinproject.com/courses/html5-and-css3) course, a great selection of resources and interesting projects. The projects ranged from cloning the Google homepage, to its results page, a YouTube page, an older version of the apple.com homepage and a New York Times article employing a range of concepts like **HTML forms, CSS Box Model, Responsive Design with media queries.**\n\nLuckily I had [jellyc0la's](https://github.com/jellyc0la) guidance a text away to triple-check my work, which proved the importance of fresh eyes and good mentorship. A particularly painful episode when an extra \"/\" prevented a YouTube logo to render properly in the header springs to mind.\n\nInstead of using a framework like [Bootstrap](http://getbootstrap.com/), I accumulated enough technical sophistication to build my own [cc-ss](https://github.com/l0rdcafe/cc-ss) library, using resources such as [Skeleton](http://getskeleton.com/), [clrs](http://clrs.cc/), [font-awesome](http://fontawesome.io/), and [normalize](https://necolas.github.io/normalize.css/). Along the way, I read a couple of [SASS](http://thesassway.com/) [tutorials](https://learnxinyminutes.com/docs/sass/) as well that were helpful in writing my framework efficiently. As my knowledge expanded, so did my arsenal of tools. I upgraded from the default **Mac Terminal** to [iTerm2](https://www.iterm2.com/), decked out my [Atom text editor](https://atom.io/) with packages and established a streamlined workflow [(More on that later!).](#newdev) Most importantly, I ensured daily progress covering new ground and working on at least a project a day.\n\nThe main benefit of deep learning is a better understanding of frameworks, libraries and even languages like **SASS**, which I found more intuitive after covering main **CSS** concepts. Beyond **HTML** and **CSS**, I've read the first couple of chapters of [EloquentJS](http://eloquentjavascript.net/), a book that is a favorite amongst many programmers.\n\nAlthough my current programming sophistication fails to show for any notable achievements, I intend on immersing myself and delving as deep into programming concepts, frameworks, libraries and everything in between as I did before. So stay tuned for the exciting upcoming projects!\n",
        "type": "MarkdownRemark",
        "contentDigest": "1f21e8b49f79c905d50d60c8f0916a30",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Introduction",
        "date": "2017-04-27T10:00:00.000Z",
        "tags": null,
        "description": "Introductory post detailing self-taught beginnings of l0rdcafe in the front end development path using resources such as Michael Hartl's Learn Enough series, the Odin Project's web dev track, EloquentJS and commenting on technologies like SASS preprocessors, iTerm2 command line terminal, Atom text editor and my personal experience with building my own CSS framework combining Normalize, Skeleton, clrs, font awesome libraries into cc-ss.",
        "og_description": "Introductory post detailing self-taught beginnings in front end development path using resources such as Michael Hartl's Learn Enough series, EloquentJS and  technologies like SASS preprocessors, iTerm2 command line terminal,and building my own CSS framework titled cc-ss.",
        "twitter_description": "Introductory post about beginnings in front end development with resources such as M. Hartl's Learn Enough series, EloquentJS and technologies like iTerm2 terminal, and building a CSS framework.",
        "path": "/intro",
        "_PARENT": "cf11e789-be4a-51ab-bbe1-d27dc8f98705"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nHello, world. At the turn of the year, my hacker buddy [jellyc0la](https://github.com/jellyc0la) linked me a series of introductory tutorials titled [Learn Enough](http://learnenough.com/), and ever since I've been on a deep dive into the expanding universe of web development. He mentored me through a well-crafted curriculum, starting with front-end web development, and relentlessly emphasizing learning the fundamentals of concepts deeply.\n\nAfter covering some basic **UNIX command line**, basic version control and **HTML**, next up was [The Odin Project's HTML5/CSS3](https://www.theodinproject.com/courses/html5-and-css3) course, a great selection of resources and interesting projects. The projects ranged from cloning the Google homepage, to its results page, a YouTube page, an older version of the apple.com homepage and a New York Times article employing a range of concepts like **HTML forms, CSS Box Model, Responsive Design with media queries.**\n\nLuckily I had [jellyc0la's](https://github.com/jellyc0la) guidance a text away to triple-check my work, which proved the importance of fresh eyes and good mentorship. A particularly painful episode when an extra \"/\" prevented a YouTube logo to render properly in the header springs to mind.\n\nInstead of using a framework like [Bootstrap](http://getbootstrap.com/), I accumulated enough technical sophistication to build my own [cc-ss](https://github.com/l0rdcafe/cc-ss) library, using resources such as [Skeleton](http://getskeleton.com/), [clrs](http://clrs.cc/), [font-awesome](http://fontawesome.io/), and [normalize](https://necolas.github.io/normalize.css/). Along the way, I read a couple of [SASS](http://thesassway.com/) [tutorials](https://learnxinyminutes.com/docs/sass/) as well that were helpful in writing my framework efficiently. As my knowledge expanded, so did my arsenal of tools. I upgraded from the default **Mac Terminal** to [iTerm2](https://www.iterm2.com/), decked out my [Atom text editor](https://atom.io/) with packages and established a streamlined workflow [(More on that later!).](#newdev) Most importantly, I ensured daily progress covering new ground and working on at least a project a day.\n\nThe main benefit of deep learning is a better understanding of frameworks, libraries and even languages like **SASS**, which I found more intuitive after covering main **CSS** concepts. Beyond **HTML** and **CSS**, I've read the first couple of chapters of [EloquentJS](http://eloquentjavascript.net/), a book that is a favorite amongst many programmers.\n\nAlthough my current programming sophistication fails to show for any notable achievements, I intend on immersing myself and delving as deep into programming concepts, frameworks, libraries and everything in between as I did before. So stay tuned for the exciting upcoming projects!\n",
      "fileAbsolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/intro.md"
    },
    "25005c4d-21ea-5422-8158-72b7afb452b4": {
      "id": "25005c4d-21ea-5422-8158-72b7afb452b4",
      "children": [],
      "parent": "8f323c00-9fc2-59e3-bafd-e31f0b5822df",
      "internal": {
        "content": "\nHey <span class=\"main__body__content__span\">hackers!</span> [l0rdcafé](mailto:me@l0rdcafe.com) here. This post is about **version control**, how I learned **git** and in turn my first open source contribution. Up until then, my technical proficiency with **version control** was limited. I had a basic workflow to initialize a **repository**, add files, **commit changes** and **push repositories** to a remote server, in my case [GitHub](http://github.com) but that was about it.\n\nMy **git workflow** was a product of the aforementioned [Learn Enough tutorial on version control](https://www.learnenough.com/git-tutorial), [GitHub's Guides](https://guides.github.com/) and trial and error within reasonable limits. Until one day after updating my **tech stack**, [(more on that to come later!)](#newdev) and getting [browser-sync](http://browsersync.io/), which starts a **local** web server that updates browser on file changes. I noticed the [tldr](https://github.com/tldr-pages/tldr) pages were missing a page for [browser-sync](http://browsersync.io) after needing to look up some syntax examples.\n\nSeeing an opportunity to contribute, I went to the [GitHub tldr repo](https://github.com/tldr-pages/tldr), **forked** a copy from its **master branch**, and created my one-page contribution to the [tldr](https://github.com/tldr-pages/tldr). Again, [jellyc0la's](https://github.com/jellyc0la) guidance was invaluable to my success, helping me ensure adherence to the standardized format of the **tldr pages**. Inevitably and due to my inexperience with **git** as well as the **CI server**, I committed one too many changes.\n\nFearful it might reflect a lack of professionalism, I learned about **git rebase** with the help of [jellyc0la](https://github.com/jellyc0la), which enables you to alter the history of **commits** in a variety of ways. And after mostly trial and error, tweaking the **git log**, I **pushed** my changes for submission. My contribution finally passed the **CI** and was to be reviewed by the maintainer. Within a day or two, the first maintainer approved the changes, and notified the second maintainer to review my **pull request**. A month later, it was finally approved and my contribution was **merged** to the **master branch** of the [tldr pages.](https://github.com/tldr-pages/tldr/blob/master/pages/common/browser-sync.md)\n\nIn conclusion, even though I was inexperienced with **version control**; my workflow, technical sophistication and knowledge lacking, my first open source contribution helped me learn more **git** and gain valuable experience under my belt with **pull requests**, **forks**, **git rebase** even more than tutorials ever did. And this goes to show that nothing beats immersion when it comes to learning.\n",
        "type": "MarkdownRemark",
        "contentDigest": "9e73b962556f2735dc0ddef16520e222",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "My First Open Source Contribution",
        "date": "2017-04-27T11:00:00.000Z",
        "tags": null,
        "description": "l0rdcafe's experience with open source contribution to the tldr manual pages, adding a page for the browser-sync CLI. Blog post features references to M. Hartl's Learn Enough series and discusses git version control and advanced topics such as git rebase, bypassing a CI server, cleaning up git history, and how to submit a pull request to an open source project on github.",
        "og_description": "Post about an open source contribution to the tldr manual pages, adding a browser-sync CLI manual page using some git history manipulation and a pull request on github.",
        "twitter_description": "Post about an open source contribution to the tldr manual pages, adding a browser-sync CLI manual page using some git history manipulation and a pull request on github.",
        "path": "/open-source",
        "_PARENT": "8f323c00-9fc2-59e3-bafd-e31f0b5822df"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nHey <span class=\"main__body__content__span\">hackers!</span> [l0rdcafé](mailto:me@l0rdcafe.com) here. This post is about **version control**, how I learned **git** and in turn my first open source contribution. Up until then, my technical proficiency with **version control** was limited. I had a basic workflow to initialize a **repository**, add files, **commit changes** and **push repositories** to a remote server, in my case [GitHub](http://github.com) but that was about it.\n\nMy **git workflow** was a product of the aforementioned [Learn Enough tutorial on version control](https://www.learnenough.com/git-tutorial), [GitHub's Guides](https://guides.github.com/) and trial and error within reasonable limits. Until one day after updating my **tech stack**, [(more on that to come later!)](#newdev) and getting [browser-sync](http://browsersync.io/), which starts a **local** web server that updates browser on file changes. I noticed the [tldr](https://github.com/tldr-pages/tldr) pages were missing a page for [browser-sync](http://browsersync.io) after needing to look up some syntax examples.\n\nSeeing an opportunity to contribute, I went to the [GitHub tldr repo](https://github.com/tldr-pages/tldr), **forked** a copy from its **master branch**, and created my one-page contribution to the [tldr](https://github.com/tldr-pages/tldr). Again, [jellyc0la's](https://github.com/jellyc0la) guidance was invaluable to my success, helping me ensure adherence to the standardized format of the **tldr pages**. Inevitably and due to my inexperience with **git** as well as the **CI server**, I committed one too many changes.\n\nFearful it might reflect a lack of professionalism, I learned about **git rebase** with the help of [jellyc0la](https://github.com/jellyc0la), which enables you to alter the history of **commits** in a variety of ways. And after mostly trial and error, tweaking the **git log**, I **pushed** my changes for submission. My contribution finally passed the **CI** and was to be reviewed by the maintainer. Within a day or two, the first maintainer approved the changes, and notified the second maintainer to review my **pull request**. A month later, it was finally approved and my contribution was **merged** to the **master branch** of the [tldr pages.](https://github.com/tldr-pages/tldr/blob/master/pages/common/browser-sync.md)\n\nIn conclusion, even though I was inexperienced with **version control**; my workflow, technical sophistication and knowledge lacking, my first open source contribution helped me learn more **git** and gain valuable experience under my belt with **pull requests**, **forks**, **git rebase** even more than tutorials ever did. And this goes to show that nothing beats immersion when it comes to learning.\n",
      "fileAbsolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/open-source.md"
    },
    "938e7fc3-676d-5447-ac98-4d68a093969f": {
      "id": "938e7fc3-676d-5447-ac98-4d68a093969f",
      "children": [],
      "parent": "239dde18-9da4-507e-9962-46e68c638cd6",
      "internal": {
        "content": "\nHey <span class=\"main__body__content__span\">hacker friends!</span> It's [l0rdcafé](mailto:me@l0rdcafe.com). I fleetingly mentioned the term **tech stack** in the previous post. Here, we go deeper into that and how to set up a well-organized workflow especially for new web developers on Mac.\n\n1. <i class=\"fa fa-square\"></i>[iTerm2](#itrm)\n2. <i class=\"fa fa-square\"></i>[Homebrew](#brew)\n3. <i class=\"fa fa-square\"></i>[Node](#node)\n4. <i class=\"fa fa-square\"></i>[Easier to read manual pages](#tldr)\n5. <i class=\"fa fa-square\"></i>[Setup your Shell with Prezto](#zsh)\n6. <i class=\"fa fa-square\"></i>[Faster directory navigation](#j)\n7. <i class=\"fa fa-square\"></i>[Efficient CSS workflow](#brwsr)\n8. <i class=\"fa fa-square\"></i>[Linters and other plugins](#lntrs)\n9. <i class=\"fa fa-square\"></i>[Autoprefixer](#autop)\n\n<h4 id=\"itrm\">iTerm2</h4>\n\nIf you're still using the default **Mac Terminal**, bin that instantly and download [iTerm2](https://iterm2.com/). Press **Cmd-N**, instant improvement, right?\n\n[iTerm2](https://www.iterm2.com/) unlike **Terminal**, is very customizable. So give the preferences a look and toy with the colors. Additionally, you can download [preset color schemes](http://iterm2colorschemes.com/).![iTerm2 changing color theme gif](/assets/colors.gif)\n\n<h4 id=\"brew\">Homebrew</h4>\n\nBefore you go any further, you should install [Homebrew](https://brew.sh/). It'll give you quick access to a plethora of software by running simple commands, dubbed as the missing package manager for macOS. Copy/paste the command into your terminal.\n\n<h4 id=\"node\">Node</h4>\n\nUp next is [Node,](https://nodejs.org/en/) which after installing [Homebrew](https://brew.sh/) becomes a much simpler task. Run `brew install node`. Now, run `node -v` to see if it's installed, and then also `npm -v`. If it is, you should see something similar to this.\n\n![node version print in terminal](/assets/node.png)\n\n<h4 id=\"tldr\">Easier to read Manual Pages</h4>\n\nIf you know some basic **UNIX command line** and know about the `man` pages, which are notoriously dizzying to read, then you should start off by installing [tldr](https://github.com/tldr-pages/tldr). Simply run `sudo npm install –g tldr`, then run `tldr echo` to see if it works. The `sudo` prefix might not be necessary, depending on your admin preferences. But if you run the command without it and returns an error, then it will be.\n\n<h4 id=\"zsh\">Shell Setup with Prezto</h4>\n\nThe default **Shell** is `.bash`, which isn't necessarily the most efficient. You can tell which **Shell** is running by looking at the top of your terminal window.\n\n![bash shell terminal window top](/assets/bash.png)\n\nThat's where [Prezto](https://github.com/sorin-ionescu/prezto) comes into play, a `.zsh` **framework** enriching the command line interface with **aliases**, **sane defaults**, **prompt themes** and most importantly **auto completion**; a true savior!\n\nRun `zsh` to start a `.zsh` session and follow the installation instructions carefully.\n\nAs with most things, you'll need to customize your [Prezto](https://github.com/sorin-ionescu/prezto) modules. So go to your home directory by running `cd`, then run `ls -a` and check to see if there's a `.zpreztorc`. If there is and there should be, open that file in your **text editor**and make sure the modules from line 26 to 44 are in the following order.\n\n![prezto modules config in Atom settings](/assets/module.png)\n\n<h4 id=\"j\">Faster Directory Navigation</h4>\n\nMoreover, if you've used the `cd` command enough, you'll know how consuming directory navigation can be. Run `brew install fasd` and now you can use the command `j` with any **directory** that you've visited before as its **argument** to navigate instantly there. Here's an example of it in action.\n\n![directory hopping using fasd gif](/assets/fasd.gif)\n\n<h4 id=\"brwsr\">Efficient CSS Workflow</h4>\n\nWriting **CSS** can be a pain when you have to refresh the page on your browser with each saved change. That's why [browser-sync](https://browsersync.io/) exists, run `sudo npm install –g browser-sync`, then `tldr browser-sync` [(Aha!)](#src) for examples on how to use it.\n\n![browser-sync demo gif](/assets/browser-sync.gif)\n\n<h4 id=\"lntrs\">Linters and Text Editor Plugins</h4>\n\nNow it's time to upgrade your **text editor**. Personally, I picked [Atom](https://atom.io/) at the start and have been using it ever since, so this is going to be catered to that but feel free to look up equivalent upgrades for whatever **text editor** you end up choosing. **Linters** are packages installed in a **text editor** that, given specific settings will clean up your code and pick up on any syntax errors. This is a pretty long list, since you have to install **linters** for each language. However, I highly advise against copy/pasting and to actually type in each command.\n\n<code class=\"main__body__content__code\">apm install linter-csslint <br>\napm install linter-htmlhint\n<br>\napm install linter-jsonlint\n<br>\napm install linter-scss-lint\n<br>\napm install linter-markdown\n<br>\napm install linter-eslint\n<br>\napm install linter-stylefmt\n<br>\napm install linter-write-good\n<br>\napm install atom-beautify\n<br>\napm install git-diff\n<br>\napm install jquery\n<br>\napm install pigments\n<br>\napm install file-type-icons\n<br>\napm install open-recent</code>\n\nYou will need to customize some of these plugins. Firstly, create a `~/.eslintrc` file and write the following in it.\n\n![eslintrc file setup](/assets/eslintrc.png)\n\nThen your beautify settings should match those in the following image.\n\n![Atom text editor beautify plugin settings](/assets/beautify.png)\n\nYou'll also need to tick the box for Use global ESLint installation as well as specify the **.eslintrc Path** to the `~/.eslintrc` file created earlier. You can implement these changes in the linter-eslint plugin settings as shown below. Additionally, you should run `npm get prefix` and input the result into the **Global Node Installation Path** box.\n\n![Atom text editor style lint settings](/assets/stylelint2.png)\n\n<h4 id=\"autop\">Autoprefixer</h4>\n\nBeyond **linters**, an **autoprefixer** will be your new best friend. You'll never have to hardcode **vendor prefixes** again. By simply running `apm install autoprefixer` and setting it to prefix on save, you can simply code, save and **vendor prefixes** will be prefixed automagically.\n\nThat's it for the web developer starter pack. These tools will help you establish an efficient workflow and save you time and cognitive load to work on other less trivial issues as opposed to figuring out **vendor prefixes** for random properties.\n",
        "type": "MarkdownRemark",
        "contentDigest": "218d33b54d3864c46469ffa59ad00dee",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Setup Your Macbook Pro To Be More Efficient for Editing Code (For New Web Devs)",
        "date": "2017-04-27T12:00:00.000Z",
        "tags": null,
        "description": "l0rdcafe's starter pack blog post outlining how to edit code efficiently for beginner front end web developers with installation tutorials for iTerm2 terminal, Homebrew, Node, tldr manual pages, a better shell using zsh, command line autojump, a quicker CSS workflow using browser-sync, using editor plugins such as linters for markdown, JSON, ESLint, HTML and others as well as autoprefixer for quicker coding.",
        "og_description": "Starter pack for beginner front end web devs including installation tutorials for text editor plugins, better command line and CSS workflows and hints to make code editing and writing faster and more efficient.",
        "twitter_description": "Starter pack for beginner front end web devs including tutorials for text editor plugins, better command line and CSS workflows and hints to make code editing and writing faster and more efficient.",
        "path": "/mac-setup",
        "_PARENT": "239dde18-9da4-507e-9962-46e68c638cd6"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nHey <span class=\"main__body__content__span\">hacker friends!</span> It's [l0rdcafé](mailto:me@l0rdcafe.com). I fleetingly mentioned the term **tech stack** in the previous post. Here, we go deeper into that and how to set up a well-organized workflow especially for new web developers on Mac.\n\n1. <i class=\"fa fa-square\"></i>[iTerm2](#itrm)\n2. <i class=\"fa fa-square\"></i>[Homebrew](#brew)\n3. <i class=\"fa fa-square\"></i>[Node](#node)\n4. <i class=\"fa fa-square\"></i>[Easier to read manual pages](#tldr)\n5. <i class=\"fa fa-square\"></i>[Setup your Shell with Prezto](#zsh)\n6. <i class=\"fa fa-square\"></i>[Faster directory navigation](#j)\n7. <i class=\"fa fa-square\"></i>[Efficient CSS workflow](#brwsr)\n8. <i class=\"fa fa-square\"></i>[Linters and other plugins](#lntrs)\n9. <i class=\"fa fa-square\"></i>[Autoprefixer](#autop)\n\n<h4 id=\"itrm\">iTerm2</h4>\n\nIf you're still using the default **Mac Terminal**, bin that instantly and download [iTerm2](https://iterm2.com/). Press **Cmd-N**, instant improvement, right?\n\n[iTerm2](https://www.iterm2.com/) unlike **Terminal**, is very customizable. So give the preferences a look and toy with the colors. Additionally, you can download [preset color schemes](http://iterm2colorschemes.com/).![iTerm2 changing color theme gif](/assets/colors.gif)\n\n<h4 id=\"brew\">Homebrew</h4>\n\nBefore you go any further, you should install [Homebrew](https://brew.sh/). It'll give you quick access to a plethora of software by running simple commands, dubbed as the missing package manager for macOS. Copy/paste the command into your terminal.\n\n<h4 id=\"node\">Node</h4>\n\nUp next is [Node,](https://nodejs.org/en/) which after installing [Homebrew](https://brew.sh/) becomes a much simpler task. Run `brew install node`. Now, run `node -v` to see if it's installed, and then also `npm -v`. If it is, you should see something similar to this.\n\n![node version print in terminal](/assets/node.png)\n\n<h4 id=\"tldr\">Easier to read Manual Pages</h4>\n\nIf you know some basic **UNIX command line** and know about the `man` pages, which are notoriously dizzying to read, then you should start off by installing [tldr](https://github.com/tldr-pages/tldr). Simply run `sudo npm install –g tldr`, then run `tldr echo` to see if it works. The `sudo` prefix might not be necessary, depending on your admin preferences. But if you run the command without it and returns an error, then it will be.\n\n<h4 id=\"zsh\">Shell Setup with Prezto</h4>\n\nThe default **Shell** is `.bash`, which isn't necessarily the most efficient. You can tell which **Shell** is running by looking at the top of your terminal window.\n\n![bash shell terminal window top](/assets/bash.png)\n\nThat's where [Prezto](https://github.com/sorin-ionescu/prezto) comes into play, a `.zsh` **framework** enriching the command line interface with **aliases**, **sane defaults**, **prompt themes** and most importantly **auto completion**; a true savior!\n\nRun `zsh` to start a `.zsh` session and follow the installation instructions carefully.\n\nAs with most things, you'll need to customize your [Prezto](https://github.com/sorin-ionescu/prezto) modules. So go to your home directory by running `cd`, then run `ls -a` and check to see if there's a `.zpreztorc`. If there is and there should be, open that file in your **text editor**and make sure the modules from line 26 to 44 are in the following order.\n\n![prezto modules config in Atom settings](/assets/module.png)\n\n<h4 id=\"j\">Faster Directory Navigation</h4>\n\nMoreover, if you've used the `cd` command enough, you'll know how consuming directory navigation can be. Run `brew install fasd` and now you can use the command `j` with any **directory** that you've visited before as its **argument** to navigate instantly there. Here's an example of it in action.\n\n![directory hopping using fasd gif](/assets/fasd.gif)\n\n<h4 id=\"brwsr\">Efficient CSS Workflow</h4>\n\nWriting **CSS** can be a pain when you have to refresh the page on your browser with each saved change. That's why [browser-sync](https://browsersync.io/) exists, run `sudo npm install –g browser-sync`, then `tldr browser-sync` [(Aha!)](#src) for examples on how to use it.\n\n![browser-sync demo gif](/assets/browser-sync.gif)\n\n<h4 id=\"lntrs\">Linters and Text Editor Plugins</h4>\n\nNow it's time to upgrade your **text editor**. Personally, I picked [Atom](https://atom.io/) at the start and have been using it ever since, so this is going to be catered to that but feel free to look up equivalent upgrades for whatever **text editor** you end up choosing. **Linters** are packages installed in a **text editor** that, given specific settings will clean up your code and pick up on any syntax errors. This is a pretty long list, since you have to install **linters** for each language. However, I highly advise against copy/pasting and to actually type in each command.\n\n<code class=\"main__body__content__code\">apm install linter-csslint <br>\napm install linter-htmlhint\n<br>\napm install linter-jsonlint\n<br>\napm install linter-scss-lint\n<br>\napm install linter-markdown\n<br>\napm install linter-eslint\n<br>\napm install linter-stylefmt\n<br>\napm install linter-write-good\n<br>\napm install atom-beautify\n<br>\napm install git-diff\n<br>\napm install jquery\n<br>\napm install pigments\n<br>\napm install file-type-icons\n<br>\napm install open-recent</code>\n\nYou will need to customize some of these plugins. Firstly, create a `~/.eslintrc` file and write the following in it.\n\n![eslintrc file setup](/assets/eslintrc.png)\n\nThen your beautify settings should match those in the following image.\n\n![Atom text editor beautify plugin settings](/assets/beautify.png)\n\nYou'll also need to tick the box for Use global ESLint installation as well as specify the **.eslintrc Path** to the `~/.eslintrc` file created earlier. You can implement these changes in the linter-eslint plugin settings as shown below. Additionally, you should run `npm get prefix` and input the result into the **Global Node Installation Path** box.\n\n![Atom text editor style lint settings](/assets/stylelint2.png)\n\n<h4 id=\"autop\">Autoprefixer</h4>\n\nBeyond **linters**, an **autoprefixer** will be your new best friend. You'll never have to hardcode **vendor prefixes** again. By simply running `apm install autoprefixer` and setting it to prefix on save, you can simply code, save and **vendor prefixes** will be prefixed automagically.\n\nThat's it for the web developer starter pack. These tools will help you establish an efficient workflow and save you time and cognitive load to work on other less trivial issues as opposed to figuring out **vendor prefixes** for random properties.\n",
      "fileAbsolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/mac-setup.md"
    },
    "622f13af-ae1c-5044-a83b-7989e5deb116": {
      "id": "622f13af-ae1c-5044-a83b-7989e5deb116",
      "children": [],
      "parent": "02089f74-26fd-53c8-97dd-9d83294e195d",
      "internal": {
        "content": "\nHey <span class=\"main__body__content__span\">hacker friends!</span> Ur fam; [l0rdcafe](mailto:me@l0rdcafe.com) here. This installment is about **JavaScript**, or in other words my first foray into proper programming.\n\nTwo weeks ago, I had little to no programming experience whatsoever. I'd read a few tutorials and seen some **JavaScript** syntax, enough to scare me away from programming for browsers. However, I decided it was time to face my fears and program for the web.\n\nI started off by reading and doing the [exercises](http://asmarterwaytolearn.com/js/index-of-exercises.html) for [A Smarter Way To Learn: JavaScript by Mark Myers](http://www.asmarterwaytolearn.com/); a quick and to the point programming book that teaches you the foundations of the language whilst maintaining basic practicality. After finishing the book, I signed up and completed the [Practical JavaScript](https://watchandcode.com/p/practical-javascript) course at [Watch and Code,](https://watchandcode.com/) building a basic to-do list with the instructor. Where he goes into thorough explanation of all aspects of the program in an intuitive and practical way.\n\nBeyond the [Watch and Code tutorial,](https://watchandcode.com/p/practical-javascript) I decided to implement some extra features to the application like **expired items, urgent items, item counters** and other **UI features.** That proved to be the most educational part of the process as I encountered every programmer's best friends; **bugs.**\n\nI quickly learned that you constantly need to maintain a _readable, consistent_ and **focused codebase** to simplify **debugging**, adding features and most of all avoid mistakes. Moreover, I also learned that **refactoring** is necessary as a program gets bigger, and the usage of **helper methods** and/or **functions** comes into play much more prominently as an application expands.\n\nOne of the more challenging undertakings of the application was **date validation**, but from Mark Myers' e-mail address validation explanation in [A Smarter Way To Learn: JavaScript,](http://www.asmarterwaytolearn.com/) some stubbornness, and a lot of persistence, I managed to validate the date input to the desired format and also list items as either **'Urgent'** or **'Expired'** according to their due dates.\n\nAnother essential ally in my programming endeavor was a browser's **debugger** and **console**. Using the **debugger** to pause the program at specific points to catch **bugs,** going through the program line and line, stepping in and out of **functions,** and examining the program's behavior. As well as **logging variables, calling functions** and others in the **console** to ensure everything runs, as it ought to.\n\nFinally, and after much effort I had finished my [2-Do List](#2-do) with the features and functionality that I intended it to have. I've always disliked boasting, but I got to say that I do feel proud in this first moment of programming victory.\n",
        "type": "MarkdownRemark",
        "contentDigest": "21e0abe0520bd99785710981a6d61bd7",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Programming With JavaScript, Or How I Learned to Stop Worrying And Love The Debugger",
        "date": "2017-06-01T00:00:00.000Z",
        "tags": null,
        "description": "l0rdcafe's post about his first programming with JavaScript project building a 2-do List MVC and learning JS as a language. Post references Mark Myers' A Smarter Way To Learn Javascript as well as watchandcode.com's Practical JavaScript course, diving into debugging with the web console debugger, helper functions and date validation of 2-do items.",
        "og_description": "First Javascript project as a 2-do list MVC applying topics such as debugging and date validation using resources like Mark Myers' A Smarter Way To Learn Javascript and watchandcode.com's Practical Javascript course.",
        "twitter_description": "Javascript project; 2-do list MVC applying topics such as debugging and date validation with resources Mark Myers' Smarter Way To Learn Javascript and watchandcode.com's Practical Javascript course.",
        "path": "/programming-js",
        "_PARENT": "02089f74-26fd-53c8-97dd-9d83294e195d"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nHey <span class=\"main__body__content__span\">hacker friends!</span> Ur fam; [l0rdcafe](mailto:me@l0rdcafe.com) here. This installment is about **JavaScript**, or in other words my first foray into proper programming.\n\nTwo weeks ago, I had little to no programming experience whatsoever. I'd read a few tutorials and seen some **JavaScript** syntax, enough to scare me away from programming for browsers. However, I decided it was time to face my fears and program for the web.\n\nI started off by reading and doing the [exercises](http://asmarterwaytolearn.com/js/index-of-exercises.html) for [A Smarter Way To Learn: JavaScript by Mark Myers](http://www.asmarterwaytolearn.com/); a quick and to the point programming book that teaches you the foundations of the language whilst maintaining basic practicality. After finishing the book, I signed up and completed the [Practical JavaScript](https://watchandcode.com/p/practical-javascript) course at [Watch and Code,](https://watchandcode.com/) building a basic to-do list with the instructor. Where he goes into thorough explanation of all aspects of the program in an intuitive and practical way.\n\nBeyond the [Watch and Code tutorial,](https://watchandcode.com/p/practical-javascript) I decided to implement some extra features to the application like **expired items, urgent items, item counters** and other **UI features.** That proved to be the most educational part of the process as I encountered every programmer's best friends; **bugs.**\n\nI quickly learned that you constantly need to maintain a _readable, consistent_ and **focused codebase** to simplify **debugging**, adding features and most of all avoid mistakes. Moreover, I also learned that **refactoring** is necessary as a program gets bigger, and the usage of **helper methods** and/or **functions** comes into play much more prominently as an application expands.\n\nOne of the more challenging undertakings of the application was **date validation**, but from Mark Myers' e-mail address validation explanation in [A Smarter Way To Learn: JavaScript,](http://www.asmarterwaytolearn.com/) some stubbornness, and a lot of persistence, I managed to validate the date input to the desired format and also list items as either **'Urgent'** or **'Expired'** according to their due dates.\n\nAnother essential ally in my programming endeavor was a browser's **debugger** and **console**. Using the **debugger** to pause the program at specific points to catch **bugs,** going through the program line and line, stepping in and out of **functions,** and examining the program's behavior. As well as **logging variables, calling functions** and others in the **console** to ensure everything runs, as it ought to.\n\nFinally, and after much effort I had finished my [2-Do List](#2-do) with the features and functionality that I intended it to have. I've always disliked boasting, but I got to say that I do feel proud in this first moment of programming victory.\n",
      "fileAbsolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/programming-js.md"
    },
    "501b216a-c1e7-5afb-901d-630a2a183b46": {
      "id": "501b216a-c1e7-5afb-901d-630a2a183b46",
      "children": [],
      "parent": "1c1f49aa-3d38-55fb-a53a-17a8b4ebf865",
      "internal": {
        "content": "\nHey <span class=\"main__body__content__span\">hackers</span>, <span class=\"main__body__content__span\">designers</span> and <span class=\"main__body__content__span\">design hackers.</span> It's your boy [l0rdcafe](mailto:me@l0rdcafe.com). This post is a brief overview of my experience learning graphic design basics with [Sketch.](https://www.sketchapp.com/) I'll be going through what I learned, built, and how useful these new skills are.\n\n[Sketch](https://www.sketchapp.com/) is a lighter and more affordable alternative to [Adobe Photoshop.](http://www.adobe.com/ca/products/photoshop.html) [Sketch](https://www,sketchapp.com) simplifies some tasks that otherwise would be rather complicated to execute in other applications.\n\nIt's also an extremely light application and moreover, allows you to copy the **CSS** of any **asset** to the clipboard and paste it to a **text editor**. Compared to [Photoshop](http://www.adobe.com/ca/products/photoshop.html) or other graphic design software, the **CSS** given by [Sketch](https://www.sketchapp.com) is incredibly clean, easily readable and concise.\n\nSecondly, I used [Lynda](https://www.lynda.com/) to complete a series of 4 [Sketch](https://www.sketchapp.com) courses. Starting off with [Sketch Essential Training: The Basics,](https://www.lynda.com/Sketch-tutorials/Learn-Sketch-Basics/450912-2.html) and designing the mockup website with the instructor using the downloadable exercise files. I quickly picked up on the basics of [Sketch](https://www.sketchapp.com) and hardly found anything too cumbersome to do.\n\nFrom creating **artboards, to drawing vector icons, creating symbols,** and finally building a responsive website for 4 devices. This course covered the essential [Sketch](https://www.sketchapp.com) basics to be able to create, edit and export **assets** for web development or other purposes.\n\nAfterwards, I completed the [Sketch: Creating Vector Graphics](https://www.lynda.com/Sketch-tutorials/Learn-Sketch-Creating-Vector-Graphics/496907-2.html?srchtrk=index%3a11%0alinktypeid%3a2%0aq%3asketch%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2) course, which gets more into **vector graphics** in terms of drawing, editing, custom borders, **Bezier vectors, Boolean operations** and that culminated in building an average navigation toolbar.\n\nThe penultimate course named the [Sketch: Style Guides & Asset Libraries](https://www.lynda.com/Sketch-tutorials/Learn-Sketch-Style-Guides-Pattern-Libraries/496908-2.html) concerned **style guides, asset libraries** and how to manage and build them both efficiently as well as professionally. By the end of the course, I'd learned how to build my own **asset library** by combining other libraries, how to properly name **assets** and organize them in case of collaborative work, and finally how to share **asset libraries** with others.\n\nLastly, [Sketch for UX Design](https://www.lynda.com/Sketch-tutorials/UX-Design-Tools-Sketch/505807-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3asketch+ux+design%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2) was the last course I finished and it was almost an aggregate of all the aforementioned skills giving a broad outline of [Sketch](https://www.sketchapp.com) and how it can be utilized to build for a range of devices including the likes of [Apple Watch](https://www.apple.com/ca/watch/?afid=p238%7CsiRW00CTe-dc_mtid_2092506t42625_pcrid_187244146446_&cid=wwa-ca-kwgo-watch-slid-). Also, the course gets into several **plugins,** [Sketch App Sources](https://www.sketchappsources.com/) and how the [Sketch Toolbox](http://sketchtoolbox.com/) can be used to install a plethora of **plugins** created by the vibrant [Sketch community.](https://www.sketchapp.com/community/)\n\nTo wrap up, [Sketch](https://www.sketchapp.com) is an impressively user-friendly tool that allows <span class=\"main__body__content__span\">designers,</span> and <span class=\"main__body__content__span\">developers</span>\n\n to quickly draw up **mockups**, create **icons,** **assets, asset libraries,** among numerous other functions. With my newly-acquired [Sketch](https://www.sketchapp.com) nous, I made a fairly simple [l0rdcafe](mailto:me@l0rdcafe.com) logo [(See?)](#nav) as well as a mockup responsive design of a website for a fictional app for 4 devices in the [projects](#uber) section.\n",
        "type": "MarkdownRemark",
        "contentDigest": "702b0a975b86e6e485510a53f23ae2b2",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Hacking Graphic Design or Sketch for Devs",
        "date": "2017-05-08T00:00:00.000Z",
        "tags": null,
        "description": "Sketch App tutorial by l0rdcafe introducing graphic design basics for web devs outlining benefits for developers in using Sketch including easily exportable CSS as well as referencing a couple of Lynda courses teaching Sketch App basics, drawing Vector Graphics with bezier curves, creating styles guides and asset libraries and designing proper user experience.",
        "og_description": "Basic graphic design for web developers post using Sketch App, outlining its benefits and going through my experience of learning Sketch through Lynda courses concerning topics such as bezier curves, vector graphics, style guides and UX.",
        "twitter_description": "Graphic design for web developers using Sketch App, going through my personal experience of learning Sketch concerning topics such as bezier curves, vector graphics and style guides.",
        "path": "/sketch-graphic-design",
        "_PARENT": "1c1f49aa-3d38-55fb-a53a-17a8b4ebf865"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nHey <span class=\"main__body__content__span\">hackers</span>, <span class=\"main__body__content__span\">designers</span> and <span class=\"main__body__content__span\">design hackers.</span> It's your boy [l0rdcafe](mailto:me@l0rdcafe.com). This post is a brief overview of my experience learning graphic design basics with [Sketch.](https://www.sketchapp.com/) I'll be going through what I learned, built, and how useful these new skills are.\n\n[Sketch](https://www.sketchapp.com/) is a lighter and more affordable alternative to [Adobe Photoshop.](http://www.adobe.com/ca/products/photoshop.html) [Sketch](https://www,sketchapp.com) simplifies some tasks that otherwise would be rather complicated to execute in other applications.\n\nIt's also an extremely light application and moreover, allows you to copy the **CSS** of any **asset** to the clipboard and paste it to a **text editor**. Compared to [Photoshop](http://www.adobe.com/ca/products/photoshop.html) or other graphic design software, the **CSS** given by [Sketch](https://www.sketchapp.com) is incredibly clean, easily readable and concise.\n\nSecondly, I used [Lynda](https://www.lynda.com/) to complete a series of 4 [Sketch](https://www.sketchapp.com) courses. Starting off with [Sketch Essential Training: The Basics,](https://www.lynda.com/Sketch-tutorials/Learn-Sketch-Basics/450912-2.html) and designing the mockup website with the instructor using the downloadable exercise files. I quickly picked up on the basics of [Sketch](https://www.sketchapp.com) and hardly found anything too cumbersome to do.\n\nFrom creating **artboards, to drawing vector icons, creating symbols,** and finally building a responsive website for 4 devices. This course covered the essential [Sketch](https://www.sketchapp.com) basics to be able to create, edit and export **assets** for web development or other purposes.\n\nAfterwards, I completed the [Sketch: Creating Vector Graphics](https://www.lynda.com/Sketch-tutorials/Learn-Sketch-Creating-Vector-Graphics/496907-2.html?srchtrk=index%3a11%0alinktypeid%3a2%0aq%3asketch%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2) course, which gets more into **vector graphics** in terms of drawing, editing, custom borders, **Bezier vectors, Boolean operations** and that culminated in building an average navigation toolbar.\n\nThe penultimate course named the [Sketch: Style Guides & Asset Libraries](https://www.lynda.com/Sketch-tutorials/Learn-Sketch-Style-Guides-Pattern-Libraries/496908-2.html) concerned **style guides, asset libraries** and how to manage and build them both efficiently as well as professionally. By the end of the course, I'd learned how to build my own **asset library** by combining other libraries, how to properly name **assets** and organize them in case of collaborative work, and finally how to share **asset libraries** with others.\n\nLastly, [Sketch for UX Design](https://www.lynda.com/Sketch-tutorials/UX-Design-Tools-Sketch/505807-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3asketch+ux+design%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2) was the last course I finished and it was almost an aggregate of all the aforementioned skills giving a broad outline of [Sketch](https://www.sketchapp.com) and how it can be utilized to build for a range of devices including the likes of [Apple Watch](https://www.apple.com/ca/watch/?afid=p238%7CsiRW00CTe-dc_mtid_2092506t42625_pcrid_187244146446_&cid=wwa-ca-kwgo-watch-slid-). Also, the course gets into several **plugins,** [Sketch App Sources](https://www.sketchappsources.com/) and how the [Sketch Toolbox](http://sketchtoolbox.com/) can be used to install a plethora of **plugins** created by the vibrant [Sketch community.](https://www.sketchapp.com/community/)\n\nTo wrap up, [Sketch](https://www.sketchapp.com) is an impressively user-friendly tool that allows <span class=\"main__body__content__span\">designers,</span> and <span class=\"main__body__content__span\">developers</span>\n\n to quickly draw up **mockups**, create **icons,** **assets, asset libraries,** among numerous other functions. With my newly-acquired [Sketch](https://www.sketchapp.com) nous, I made a fairly simple [l0rdcafe](mailto:me@l0rdcafe.com) logo [(See?)](#nav) as well as a mockup responsive design of a website for a fictional app for 4 devices in the [projects](#uber) section.\n",
      "fileAbsolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/sketch-graphic-design.md"
    },
    "20c8a6ae-5877-52fc-9d36-f2a91d8fe52e": {
      "id": "20c8a6ae-5877-52fc-9d36-f2a91d8fe52e",
      "children": [],
      "parent": "58c54703-2991-56ed-be5f-52e31758fb46",
      "internal": {
        "content": "\nHey fellow <span class=\"main__body__content__span\">hackers!</span> It's been ages but [l0rdcafe's](mailto:me@l0rdcafe.com) back at it again and this time the topic of this post is performance.\n\n A small while ago, I had built an app right [here](https://l0rdcafe.github.io/khamra/), which given geolocation permission and a radius in kilometers would recommend nearby places to get drinks. Moreover, as I learned more and more about performance, how performant the app is was of interest to me. As a result, I decided to deploy this app to [Surge](https://surge.sh/) and [Zeit](https://zeit.co/now), with it being already deployed to Github Pages and measure the difference in performance between all three.\n \nThe tool used for this measurement was the Apache Bench CLI, an infamous tool that benchmarks website performance and returns results detailing the number of requests the server can perform, the time it took for the user to get a response, the time it took for the client to establish a connection with the server, the processing time as in the time between sending the first byte of the request to the server and getting the first byte of the server response, waiting time or the time between sending the last byte of the request and getting the first byte of the response as well as other information.\n  \nTo get consistent results, I decided to run the same command on all three servers and compare the returned results. The command run was <code>ab -c 250 -n 5000 khamra.surge.sh/</code>, the first argument denotes concurrency as in the number of requests being concurrently made to the server while the second argument denotes the total number of requests made to the server.\n\n![Surge Apache Bench CLI results](/assets/surge-ab.png)\n\nThe screenshot above shows the results for the Surge server.  The first part is self explanatory, detailing the server software as SurgeCDN/1.2.0, the server hostname as khamra.surge.sh and the server port as 80. The document length follows at 1939 bytes. The time taken for tests is 55.845 seconds and it has 55 failed requests. The total transferred bytes are 11177506 bytes and the transferred HTML is 9594405 bytes. Now onto the important parts, the Surge server can process 89.53 requests per second. The first time per request outlines how much time it took for the server to process 250 concurrent requests, which is at 2792.228 ms and the second time per request denotes how much time it took for the browser to get the index.html, which is at 11.169 ms. Next up are connection times, the Connect values provide the smallest and largest amount of time it took for the client to establish a connection with the server through a DNS lookup, which are 226 ms and 41493 ms respectively, as well as a mean of 1405 ms and standard deviation of 2684.6 ms. Secondly, it provides min, max, mean and standard deviation values for the amount of time between sending the first byte of the request and receiving the first byte of the response, which are 229 ms, 15892 ms, 862 ms and 1054.5 ms respectively. Thirdly, the waiting time values defining the amount of time between sending the last byte of the request and receiving the first byte of the response, with its min value being 228 ms, its max value being 15891 ms, its mean being 860 ms and its standard deviation being 1054.6 ms. Lastly, the total values combine the above into a min value of 459 ms, a max value of 43283 ms, a mean of 2267 ms and a standard deviation of 2932.5 ms. Means are often skewed by outliers, and so 95% of the requests served within a certain time was 5699 ms, which is more accurate than the 100% of requests served in 43283 ms.\n\n![Github Pages Apache Bench CLI results](/assets/ghpages-ab.png)\n\nThe benchmarking for the Github Pages then followed running the same command as the one ran on the Surge server. The results show a similar server port of 80, concurrency level of 250 and complete requests of 5000, but a server software of Github.com, and server hostname of l0rdcafe.github.io. The time taken for tests is longer than Surge's at 62.66 seconds. The Github Pages unlike the Surge server didn't have any failed requests and the total transferred was less at 3602927 bytes and less transferred HTML at 890000 bytes. But the requests per second is less at 79.80 seconds, and its time per concurrent requests is higher at 3133.008 ms as well as the time taken for the browser to get index.html is slightly more at 12.532 ms. The connection times show a remarkable difference where the Connect times' min, max, mean and standard values are almost better than that of Surge's at 96 ms min value, 42069 ms max value which is in fact larger, 1328 ms mean value and standard deviation of 1913.6 ms. The Processing times also denote an improvement on the min value but worse max, mean standard deviation values, with min value being 96 ms, mean value being 874 ms, standard deviation value being 2623.1 ms and max value being 58311 ms. Waiting times show an improvement on min value, while max, mean and standard deviation values are worse, with min being 197 ms, max is 58310 ms, mean is 873 ms and standard deviation is 2623.1 ms. Lastly, Total times' min and mean values improved while max and standard deviation were worse off, min value being 197 ms, mean value being 2201 ms, standard deviation being 3234.3 ms and max value being 58444 ms. 95% of the requests took 6229 ms, which is worse when compared to the Surge server.\n\n![Zeit Apache Bench CLI results](/assets/zeit-ab.png)\n\nWhen testing the Zeit server, something peculiar happened, the connection was reset by peer and the total number of completed request peaked at 1661 instead of meeting the argument value of 5000 requests. This prevented Apache Bench from benchmarking the server as Zeit timed out the connection possibly to avoid server request overload. By limiting the number of requests made to a Zeit server, it effectively takes Zeit out of the running as far as web performance.\n\nTo wrap up, after the rigorous testing of the different servers I can conclude that Surge and Github Pages' servers are more performant than Zeit's and that in the best case scenario Github Pages is more performant than Surge. Surge though, according to the benchmarking results is on average slightly more performant than Github Pages and although the differences are small and each have got their own benefits and downsides, when scaling larger and as the numbers of requests increase, Surge's worst case scenarios are still better than Github Pages' worst cases.",
        "type": "MarkdownRemark",
        "contentDigest": "cc042623022416d246a606b403c9559c",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Benchmarking Performance Differences Between Deployments on Surge, Zeit and Github Pages",
        "date": "2018-07-05T00:00:00.000Z",
        "tags": null,
        "description": "l0rdcafe blog post discussing front end web performance differences between deployment platforms Github Pages, Zeit and Surge using Apache Bench command line interface to measure processing, server response, DNS waiting and connection times including iTerm2 screenshots.",
        "og_description": "Benchmarking web performance differences between different deployment options on Surge, Zeit and Github Pages outlining which is fastest in server response, DNS lookup, request processing and connection times with Apache Bench CLI.",
        "twitter_description": "Apache Bench CLI tutorial measuring performance differences between Surge, Zeit and Github Pages deployments in server response, request processing and DNS lookup.",
        "path": "/perf-deploys",
        "_PARENT": "58c54703-2991-56ed-be5f-52e31758fb46"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nHey fellow <span class=\"main__body__content__span\">hackers!</span> It's been ages but [l0rdcafe's](mailto:me@l0rdcafe.com) back at it again and this time the topic of this post is performance.\n\n A small while ago, I had built an app right [here](https://l0rdcafe.github.io/khamra/), which given geolocation permission and a radius in kilometers would recommend nearby places to get drinks. Moreover, as I learned more and more about performance, how performant the app is was of interest to me. As a result, I decided to deploy this app to [Surge](https://surge.sh/) and [Zeit](https://zeit.co/now), with it being already deployed to Github Pages and measure the difference in performance between all three.\n \nThe tool used for this measurement was the Apache Bench CLI, an infamous tool that benchmarks website performance and returns results detailing the number of requests the server can perform, the time it took for the user to get a response, the time it took for the client to establish a connection with the server, the processing time as in the time between sending the first byte of the request to the server and getting the first byte of the server response, waiting time or the time between sending the last byte of the request and getting the first byte of the response as well as other information.\n  \nTo get consistent results, I decided to run the same command on all three servers and compare the returned results. The command run was <code>ab -c 250 -n 5000 khamra.surge.sh/</code>, the first argument denotes concurrency as in the number of requests being concurrently made to the server while the second argument denotes the total number of requests made to the server.\n\n![Surge Apache Bench CLI results](/assets/surge-ab.png)\n\nThe screenshot above shows the results for the Surge server.  The first part is self explanatory, detailing the server software as SurgeCDN/1.2.0, the server hostname as khamra.surge.sh and the server port as 80. The document length follows at 1939 bytes. The time taken for tests is 55.845 seconds and it has 55 failed requests. The total transferred bytes are 11177506 bytes and the transferred HTML is 9594405 bytes. Now onto the important parts, the Surge server can process 89.53 requests per second. The first time per request outlines how much time it took for the server to process 250 concurrent requests, which is at 2792.228 ms and the second time per request denotes how much time it took for the browser to get the index.html, which is at 11.169 ms. Next up are connection times, the Connect values provide the smallest and largest amount of time it took for the client to establish a connection with the server through a DNS lookup, which are 226 ms and 41493 ms respectively, as well as a mean of 1405 ms and standard deviation of 2684.6 ms. Secondly, it provides min, max, mean and standard deviation values for the amount of time between sending the first byte of the request and receiving the first byte of the response, which are 229 ms, 15892 ms, 862 ms and 1054.5 ms respectively. Thirdly, the waiting time values defining the amount of time between sending the last byte of the request and receiving the first byte of the response, with its min value being 228 ms, its max value being 15891 ms, its mean being 860 ms and its standard deviation being 1054.6 ms. Lastly, the total values combine the above into a min value of 459 ms, a max value of 43283 ms, a mean of 2267 ms and a standard deviation of 2932.5 ms. Means are often skewed by outliers, and so 95% of the requests served within a certain time was 5699 ms, which is more accurate than the 100% of requests served in 43283 ms.\n\n![Github Pages Apache Bench CLI results](/assets/ghpages-ab.png)\n\nThe benchmarking for the Github Pages then followed running the same command as the one ran on the Surge server. The results show a similar server port of 80, concurrency level of 250 and complete requests of 5000, but a server software of Github.com, and server hostname of l0rdcafe.github.io. The time taken for tests is longer than Surge's at 62.66 seconds. The Github Pages unlike the Surge server didn't have any failed requests and the total transferred was less at 3602927 bytes and less transferred HTML at 890000 bytes. But the requests per second is less at 79.80 seconds, and its time per concurrent requests is higher at 3133.008 ms as well as the time taken for the browser to get index.html is slightly more at 12.532 ms. The connection times show a remarkable difference where the Connect times' min, max, mean and standard values are almost better than that of Surge's at 96 ms min value, 42069 ms max value which is in fact larger, 1328 ms mean value and standard deviation of 1913.6 ms. The Processing times also denote an improvement on the min value but worse max, mean standard deviation values, with min value being 96 ms, mean value being 874 ms, standard deviation value being 2623.1 ms and max value being 58311 ms. Waiting times show an improvement on min value, while max, mean and standard deviation values are worse, with min being 197 ms, max is 58310 ms, mean is 873 ms and standard deviation is 2623.1 ms. Lastly, Total times' min and mean values improved while max and standard deviation were worse off, min value being 197 ms, mean value being 2201 ms, standard deviation being 3234.3 ms and max value being 58444 ms. 95% of the requests took 6229 ms, which is worse when compared to the Surge server.\n\n![Zeit Apache Bench CLI results](/assets/zeit-ab.png)\n\nWhen testing the Zeit server, something peculiar happened, the connection was reset by peer and the total number of completed request peaked at 1661 instead of meeting the argument value of 5000 requests. This prevented Apache Bench from benchmarking the server as Zeit timed out the connection possibly to avoid server request overload. By limiting the number of requests made to a Zeit server, it effectively takes Zeit out of the running as far as web performance.\n\nTo wrap up, after the rigorous testing of the different servers I can conclude that Surge and Github Pages' servers are more performant than Zeit's and that in the best case scenario Github Pages is more performant than Surge. Surge though, according to the benchmarking results is on average slightly more performant than Github Pages and although the differences are small and each have got their own benefits and downsides, when scaling larger and as the numbers of requests increase, Surge's worst case scenarios are still better than Github Pages' worst cases.",
      "fileAbsolutePath": "/Users/Lord/repos/portfolio-2.0/source/_posts/perf-deploys.md"
    },
    "SitePage /offline-plugin-app-shell-fallback/": {
      "jsonName": "offline-plugin-app-shell-fallback-a30",
      "internalComponentName": "ComponentOfflinePluginAppShellFallback",
      "path": "/offline-plugin-app-shell-fallback/",
      "component": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-offline/app-shell.js",
      "componentChunkName": "component---node-modules-gatsby-plugin-offline-app-shell-js",
      "context": {},
      "pluginCreator___NODE": "Plugin gatsby-plugin-offline",
      "pluginCreatorId": "Plugin gatsby-plugin-offline",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-offline/app-shell.js",
      "id": "SitePage /offline-plugin-app-shell-fallback/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "45effa2f582b11e4f2134a4f1c170bd2",
        "description": "Plugin gatsby-plugin-offline",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /intro": {
      "jsonName": "intro-58f",
      "internalComponentName": "ComponentIntro",
      "path": "/intro",
      "component": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {},
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "id": "SitePage /intro",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "aef6d31bbbcd774bb4a3e28e9754da0f",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /open-source": {
      "jsonName": "open-source-f4a",
      "internalComponentName": "ComponentOpenSource",
      "path": "/open-source",
      "component": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {},
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "id": "SitePage /open-source",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "833d12007d0148803c1fb530ef17f444",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /mac-setup": {
      "jsonName": "mac-setup-fd9",
      "internalComponentName": "ComponentMacSetup",
      "path": "/mac-setup",
      "component": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {},
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "id": "SitePage /mac-setup",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ea7a1da3cc6a0b4aabcbd3398bf04547",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /programming-js": {
      "jsonName": "programming-js-bc5",
      "internalComponentName": "ComponentProgrammingJs",
      "path": "/programming-js",
      "component": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {},
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "id": "SitePage /programming-js",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "10918bc2d609cbb11f5b42c1eea6bf8f",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /sketch-graphic-design": {
      "jsonName": "sketch-graphic-design-9c0",
      "internalComponentName": "ComponentSketchGraphicDesign",
      "path": "/sketch-graphic-design",
      "component": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {},
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "id": "SitePage /sketch-graphic-design",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f62f0ab683785f8cb066c65000e1a433",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /perf-deploys": {
      "jsonName": "perf-deploys-391",
      "internalComponentName": "ComponentPerfDeploys",
      "path": "/perf-deploys",
      "component": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {},
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js",
      "id": "SitePage /perf-deploys",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a61be6dc29e00601b3e9a2c550c7ee29",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /": {
      "jsonName": "index",
      "internalComponentName": "ComponentIndex",
      "path": "/",
      "component": "/Users/Lord/repos/portfolio-2.0/src/pages/index.js",
      "componentChunkName": "component---src-pages-index-js",
      "context": {},
      "pluginCreator___NODE": "Plugin gatsby-plugin-page-creator",
      "pluginCreatorId": "Plugin gatsby-plugin-page-creator",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/src/pages/index.js",
      "id": "SitePage /",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0d4bfa9559b25179a109da2c233a684e",
        "description": "Plugin gatsby-plugin-page-creator",
        "owner": "internal-data-bridge"
      }
    }
  },
  "status": {
    "plugins": {},
    "PLUGINS_HASH": "41e6e995023eebd71fbfcf84f7d9b3cf"
  },
  "componentDataDependencies": {
    "nodes": {
      "Site": [
        "sq--src-components-layout-js"
      ],
      "46230de7-a842-5ec8-bcb7-3aa3d1e10f14": [
        "/intro"
      ],
      "25005c4d-21ea-5422-8158-72b7afb452b4": [
        "/open-source"
      ],
      "938e7fc3-676d-5447-ac98-4d68a093969f": [
        "/mac-setup"
      ],
      "622f13af-ae1c-5044-a83b-7989e5deb116": [
        "/programming-js"
      ],
      "501b216a-c1e7-5afb-901d-630a2a183b46": [
        "/sketch-graphic-design"
      ],
      "20c8a6ae-5877-52fc-9d36-f2a91d8fe52e": [
        "/perf-deploys"
      ]
    },
    "connections": {
      "MarkdownRemark": [
        "/"
      ]
    }
  },
  "jsonDataPaths": {
    "sq--src-components-layout-js": 755544856,
    "mac-setup-fd9": "524/path---mac-setup-fd-9-c2e-I7G3voo9gTN5FhkW84D8B0f3Sn8",
    "intro-58f": "687/path---intro-58-f-e5a-Yv4gop0x0eUIqyVQizRjYtokc",
    "open-source-f4a": "400/path---open-source-f-4-a-66a-wIDS0tYVhar4MA9mvOmKBF31V3g",
    "perf-deploys-391": "745/path---perf-deploys-391-0be-awPIyk55dHI2gDkqQsjzjsEfYaU",
    "index": "510/path---index-6a9-1WMYmXSKQaSvzuHQJqT9t9Ecw",
    "programming-js-bc5": "213/path---programming-js-bc-5-b92-kKcn8UmO3C35u2wiQ0ocvYSVvOc",
    "sketch-graphic-design-9c0": "73/path---sketch-graphic-design-9-c-0-32f-h8exIGS1VR8A87mZq5l8jrFS4",
    "dev-404-page-5f9": "920/path---dev-404-page-5-f-9-fab-NZuapzHg3X9TaN1iIixfv1W23E",
    "404-22d": "44/path---404-22-d-bce-NZuapzHg3X9TaN1iIixfv1W23E",
    "page-2-fbc": "53/path---page-2-fbc-5a8-NZuapzHg3X9TaN1iIixfv1W23E",
    "404-html-516": "164/path---404-html-516-62a-NZuapzHg3X9TaN1iIixfv1W23E",
    "offline-plugin-app-shell-fallback-a30": "520/path---offline-plugin-app-shell-fallback-a-30-c5a-NZuapzHg3X9TaN1iIixfv1W23E"
  },
  "components": {
    "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js": {
      "query": "query BlogPostByPath(\n  $path: String!\n) {\n  markdownRemark(frontmatter: {path: {eq: $path}}) {\n    html\n    frontmatter {\n      path\n      title\n      date\n      description\n      og_description\n      twitter_description\n    }\n  }\n}\n",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/src/templates/blog-post.js"
    },
    "/Users/Lord/repos/portfolio-2.0/src/pages/index.js": {
      "query": "query BlogIndexQuery {\n  allMarkdownRemark {\n    edges {\n      node {\n        frontmatter {\n          title\n          date\n          path\n        }\n      }\n    }\n  }\n}\n",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/src/pages/index.js"
    },
    "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-offline/app-shell.js": {
      "query": "",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/node_modules/gatsby-plugin-offline/app-shell.js"
    }
  },
  "staticQueryComponents": {
    "sq--src-components-layout-js": {
      "name": "SiteTitleQuery",
      "componentPath": "/Users/Lord/repos/portfolio-2.0/src/components/layout.js",
      "id": "sq--src-components-layout-js",
      "jsonName": "sq--src-components-layout-js",
      "query": "query SiteTitleQuery {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n}\n",
      "hash": 755544856
    }
  }
}